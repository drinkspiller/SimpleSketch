{"version":3,"file":"simple-sketch.mjs","sources":["../../../src/simple-sketch/injection-tokens.ts","../../../src/simple-sketch/canvas/canvas.store.ts","../../../src/simple-sketch/color-picker/color-picker-mousetrap-overlay.component.ts","../../../src/simple-sketch/color-picker/color-picker.store.ts","../../../src/simple-sketch/color-picker/color-picker.component.ts","../../../src/simple-sketch/color-picker/color-picker.component.html","../../../src/simple-sketch/toolbar/toolbar.component.ts","../../../src/simple-sketch/toolbar/toolbar.component.html","../../../src/simple-sketch/canvas/canvas.component.ts","../../../src/simple-sketch/canvas/canvas.component.html","../../../src/simple-sketch/public-api.ts","../../../src/simple-sketch/simple-sketch.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {inject, InjectionToken} from '@angular/core';\n\nexport const WINDOW = new InjectionToken<Window>(\n  'An abstraction over global window object',\n  {\n    factory: () => {\n      const {defaultView} = inject(DOCUMENT);\n\n      if (!defaultView) {\n        throw new Error('Window is not available');\n      }\n\n      return defaultView;\n    },\n  }\n);\n","import {Injectable, inject} from '@angular/core';\nimport {ComponentStore} from '@ngrx/component-store';\nimport {\n  BehaviorSubject,\n  Observable,\n  combineLatest,\n  debounceTime,\n  filter,\n  fromEvent,\n  of,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs';\nimport {WINDOW} from '../injection-tokens';\n\nexport enum Mode {\n  ERASE = 'erase',\n  SKETCH = 'sketch',\n}\n\nexport interface SimpleSketchCanvasState {\n  backgroundColor: string;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n  isSketching: boolean;\n  lineWidth: number;\n  mode: Mode;\n  paintColor: string;\n  startX: number;\n  startY: number;\n}\n\nconst INITIAL_STATE: SimpleSketchCanvasState = {\n  backgroundColor: '#000000',\n  canvasOffsetX: 0,\n  canvasOffsetY: 0,\n  isSketching: false,\n  lineWidth: 5,\n  mode: Mode.SKETCH,\n  paintColor: '#ffffff',\n  startX: 0,\n  startY: 0,\n};\n\n@Injectable()\nexport class SimpleSketchCanvasStore extends ComponentStore<SimpleSketchCanvasState> {\n  private canvas$ = new BehaviorSubject<HTMLCanvasElement | null>(null);\n  private context$ = new BehaviorSubject<CanvasRenderingContext2D | null>(null);\n  private window = inject(WINDOW);\n\n  /**\n   * +-------------------------------------------+\n   * SELECTORS\n   * +-------------------------------------------+\n   */\n  readonly backgroundColor$: Observable<string> = this.select(\n    state => state.backgroundColor\n  );\n\n  readonly paintColor$: Observable<string> = this.select(\n    state => state.paintColor\n  );\n\n  readonly canvasOffsetX$: Observable<number> = this.select(\n    state => state.canvasOffsetX\n  );\n\n  readonly canvasOffsetY$: Observable<number> = this.select(\n    state => state.canvasOffsetY\n  );\n\n  readonly isSketching$: Observable<boolean> = this.select(\n    state => state.isSketching\n  );\n\n  readonly lineWidth$: Observable<number> = this.select(\n    state => state.lineWidth\n  );\n\n  readonly mode$: Observable<Mode> = this.select(state => state.mode);\n\n  /**\n   * +-------------------------------------------+\n   * UPDATERS\n   * +-------------------------------------------+\n   */\n  readonly updateBackGroundColor = this.updater(\n    (state, newBackgroundColor: string) => ({\n      ...state,\n      backgroundColor: newBackgroundColor,\n    })\n  );\n\n  readonly updateIsSketching = this.updater((state, isSketching: boolean) => ({\n    ...state,\n    isSketching,\n  }));\n\n  readonly updateCanvasOffsetX = this.updater(\n    (state, newCanvasOffsetX: number) => ({\n      ...state,\n      canvasOffsetX: newCanvasOffsetX,\n    })\n  );\n\n  readonly updateCanvasOffsetY = this.updater(\n    (state, newCanvasOffsetY: number) => ({\n      ...state,\n      canvasOffsetY: newCanvasOffsetY,\n    })\n  );\n\n  readonly updatePaintColor = this.updater((state, newPaintColor: string) => ({\n    ...state,\n    paintColor: newPaintColor,\n  }));\n\n  readonly updateMode = this.updater((state, newMode: Mode) => ({\n    ...state,\n    mode: newMode,\n  }));\n\n  readonly updateStartX = this.updater((state, newStartX: number) => ({\n    ...state,\n    startX: newStartX,\n  }));\n\n  readonly updateStartY = this.updater((state, newStartY: number) => ({\n    ...state,\n    startY: newStartY,\n  }));\n\n  /**\n   * +-------------------------------------------+\n   * EFFECTS\n   * +-------------------------------------------+\n   */\n  readonly applyBackgroundColor = this.effect(() => {\n    return combineLatest([this.backgroundColor$, this.canvas$]).pipe(\n      tap(([color, canvas]) => {\n        if (canvas) {\n          canvas.style.backgroundColor = color;\n        }\n      })\n    );\n  });\n\n  readonly clearCanvas = this.effect(trigger$ =>\n    combineLatest([trigger$, this.context$, this.canvas$]).pipe(\n      tap(([, context, canvas]) => {\n        if (context && canvas) {\n          context.clearRect(0, 0, canvas.width, canvas.height);\n        }\n      })\n    )\n  );\n\n  readonly init = this.effect(\n    (data$: Observable<[HTMLCanvasElement, string, string]>) => {\n      return data$.pipe(\n        tap(([canvas, backgroundColor, paintColor]) => {\n          const context = canvas.getContext('2d');\n\n          this.canvas$.next(canvas);\n          this.context$.next(context);\n\n          const hostElement = canvas.parentElement as HTMLElement;\n          this.updateCanvasSize([\n            hostElement.offsetWidth,\n            hostElement.offsetHeight,\n          ]);\n\n          this.updateCanvasOffsetX(canvas.offsetLeft);\n          this.updateCanvasOffsetY(canvas.offsetTop);\n          this.updateBackGroundColor(backgroundColor);\n          this.updatePaintColor(paintColor);\n\n          this.applyBackgroundColor();\n\n          fromEvent(this.window, 'resize')\n            .pipe(takeUntil(this.destroy$), debounceTime(75))\n            .subscribe(() => {\n              this.updateCanvasSize([\n                hostElement.offsetWidth,\n                hostElement.offsetHeight,\n              ]);\n            });\n        })\n      );\n    }\n  );\n\n  readonly sketch = this.effect(\n    (event$: Observable<MouseEvent | TouchEvent>) => {\n      return combineLatest([\n        event$,\n        this.context$,\n        this.isSketching$,\n        this.lineWidth$,\n        this.canvasOffsetX$,\n        this.canvasOffsetY$,\n        this.paintColor$,\n        this.mode$,\n      ]).pipe(\n        tap(\n          ([\n            event,\n            context,\n            isSketching,\n            lineWidth,\n            canvasOffsetX,\n            canvasOffsetY,\n            paintColor,\n            mode,\n          ]) => {\n            if (!isSketching || context === null) return;\n            context.globalCompositeOperation =\n              mode === Mode.SKETCH ? 'source-over' : 'destination-out';\n            context.lineWidth =\n              mode === Mode.SKETCH ? lineWidth : lineWidth * 1.7;\n            context.lineCap = 'round';\n            context.strokeStyle = paintColor;\n\n            const screenPosition = this.eventPosition(event);\n            context.lineTo(\n              screenPosition.x - canvasOffsetX,\n              screenPosition.y - canvasOffsetY\n            );\n            context.stroke();\n          }\n        )\n      );\n    }\n  );\n\n  readonly startSketch = this.effect(\n    (event$: Observable<MouseEvent | TouchEvent>) => {\n      return event$.pipe(\n        tap(event => {\n          const screenPosition = this.eventPosition(\n            event as unknown as MouseEvent | TouchEvent\n          );\n\n          this.updateIsSketching(true);\n          this.updateStartX(screenPosition.x);\n          this.updateStartY(screenPosition.y);\n        })\n      );\n    }\n  );\n\n  readonly stopSketch = this.effect(\n    (event$: Observable<MouseEvent | TouchEvent>) => {\n      return combineLatest([event$, this.context$]).pipe(\n        tap(([, context]) => {\n          this.updateIsSketching(false);\n\n          if (context === null) return;\n          context.stroke();\n          context.beginPath();\n        })\n      );\n    }\n  );\n\n  readonly updateCanvasSize = this.effect(\n    (args$: Observable<[number, number]>) => {\n      return args$.pipe(\n        switchMap(([width, height]) => {\n          return combineLatest([\n            this.canvas$,\n            this.context$,\n            of(width),\n            of(height),\n          ]);\n        }),\n        filter(\n          /* eslint-disable @typescript-eslint/no-unused-vars */\n          ([canvas, context, width, height]) =>\n            canvas !== null && context !== null\n        ),\n        tap(([canvas, context, width, height]) => {\n          // Resizing the canvas will clear its contents, so store the current\n          // canvas contents before resizing so they can be restored after.\n          const currentCanvasContent = context!.getImageData(\n            0,\n            0,\n            canvas!.width,\n            canvas!.height\n          );\n\n          // Now resize the canvas\n          canvas!.width = width;\n          canvas!.height = height;\n\n          // Reapply saved contents/\n          context!.putImageData(currentCanvasContent, 0, 0);\n        })\n      );\n    }\n  );\n\n  /**\n   * +-------------------------------------------+\n   * CLASS METHODS\n   * +-------------------------------------------+\n   */\n\n  /**\n   * Takes a mousemove or touchmove event and return the corresponding position\n   * on the screen where the event occurred.\n   */\n  private eventPosition(event: MouseEvent | TouchEvent): {\n    x: number;\n    y: number;\n  } {\n    const isTouchEvent = event instanceof TouchEvent;\n\n    const newX = isTouchEvent\n      ? (event as TouchEvent).touches[0].pageX\n      : (event as MouseEvent).clientX;\n    const newY = isTouchEvent\n      ? (event as TouchEvent).touches[0].pageY\n      : (event as MouseEvent).clientY;\n\n    return {\n      x: newX,\n      y: newY,\n    };\n  }\n\n  constructor() {\n    super(INITIAL_STATE);\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'simple-sketch-color-picker-mousetrap-overlay',\n  standalone: true,\n  imports: [],\n  providers: [],\n  template: '',\n\n  styles: [\n    `\n      .simple-sketch-overlay {\n        background-color: rgba(0, 255, 0, 0.7);\n        display: block;\n        height: 100vh;\n        pointer-events: all;\n        width: 100vw;\n      }\n    `,\n  ],\n})\nexport class ColorPickerMousetrapOverlayComponent {}\n","import {Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Injectable, inject} from '@angular/core';\nimport {ComponentStore} from '@ngrx/component-store';\nimport {Observable, combineLatest, tap} from 'rxjs';\nimport {ColorPickerMousetrapOverlayComponent} from './color-picker-mousetrap-overlay.component';\n\nexport interface SimpleSketchColorPickerState {\n  clickStream: number;\n  isVisible: boolean;\n}\n\nconst INITIAL_STATE: SimpleSketchColorPickerState = {\n  clickStream: 0,\n  isVisible: false,\n};\n\n@Injectable({\n  providedIn: SimpleSketchColorPickerStore,\n})\nexport class SimpleSketchColorPickerStore extends ComponentStore<SimpleSketchColorPickerState> {\n  private readonly overlayService = inject(Overlay);\n  readonly mouseTrapOverlay: OverlayRef = this.overlayService.create({\n    backdropClass: 'simple-sketch-mousetrap-overlay',\n    hasBackdrop: true,\n    height: '100vh',\n    width: '100vw',\n  });\n\n  private readonly mousetrapOverlayComponentPortal: ComponentPortal<ColorPickerMousetrapOverlayComponent> =\n    new ComponentPortal(ColorPickerMousetrapOverlayComponent);\n\n  /**\n   * +-------------------------------------------+\n   * SELECTORS\n   * +-------------------------------------------+\n   */\n  readonly isVisible$: Observable<boolean> = this.select(\n    state => state.isVisible\n  );\n\n  /**\n   * +-------------------------------------------+\n   * UPDATERS\n   * +-------------------------------------------+\n   */\n  readonly updateIsVisible = this.updater((state, newIsVisible: boolean) => ({\n    ...state,\n    isVisible: newIsVisible,\n  }));\n\n  /**\n   * +-------------------------------------------+\n   * EFFECTS\n   * +-------------------------------------------+\n   */\n  readonly hideOverlay = this.effect(trigger$ =>\n    trigger$.pipe(\n      tap(() => {\n        this.mouseTrapOverlay.detach();\n      })\n    )\n  );\n\n  readonly mouseTrapOverlayClickStream = this.effect(trigger$ => {\n    return combineLatest([\n      trigger$,\n      this.mouseTrapOverlay.backdropClick(),\n    ]).pipe(\n      tap(() => {\n        this.hideOverlay();\n        this.updateIsVisible(false);\n      })\n    );\n  });\n\n  readonly showOverlay = this.effect(trigger$ => {\n    return trigger$.pipe(\n      tap(() => {\n        this.mouseTrapOverlay.detach();\n        this.mouseTrapOverlay.attach(this.mousetrapOverlayComponentPortal);\n\n        this.mouseTrapOverlayClickStream();\n      })\n    );\n  });\n\n  constructor() {\n    super(INITIAL_STATE);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  inject,\n} from '@angular/core';\nimport {ColorPickerControl, ColorPickerModule} from '@iplab/ngx-color-picker';\nimport {take} from 'rxjs';\nimport {SimpleSketchColorPickerStore} from './color-picker.store';\n\nexport const DEFAULT_SWATCHES = [\n  '#b80000',\n  '#db3e00',\n  '#fccb00',\n  '#008b02',\n  '#004dcf',\n  '#bdbdbd',\n  '#ffffff',\n  '#000000',\n];\n\n@Component({\n  selector: 'simple-sketch-color-picker',\n  standalone: true,\n  imports: [CommonModule, ColorPickerModule],\n  providers: [SimpleSketchColorPickerStore],\n  templateUrl: './color-picker.component.html',\n  styleUrl: './color-picker.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleSketchColorPickerComponent {\n  @Input()\n  set color(color: string) {\n    this.colorControl.setValueFrom(color);\n  }\n  get color() {\n    return this.colorControl.value.toHexString();\n  }\n\n  @Output()\n  public colorChange: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  public pickerVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  @HostListener('click', ['$event'])\n  toggleColorPicker() {\n    this.isVisible$.pipe(take(1)).subscribe(isVisible => {\n      if (!isVisible) {\n        this.simpleSketchColorPickerStore.showOverlay();\n      } else {\n        this.simpleSketchColorPickerStore.hideOverlay();\n      }\n      this.simpleSketchColorPickerStore.updateIsVisible(!isVisible);\n    });\n  }\n\n  protected readonly colorControl = new ColorPickerControl()\n    .setValueFrom('#ffffff')\n    .setColorPresets(DEFAULT_SWATCHES);\n\n  protected simpleSketchColorPickerStore = inject(SimpleSketchColorPickerStore);\n  protected isVisible$ = this.simpleSketchColorPickerStore.isVisible$;\n\n  changeColor(): void {\n    this.colorChange.emit(this.color);\n    this.close();\n  }\n\n  close() {\n    this.simpleSketchColorPickerStore.hideOverlay();\n    this.simpleSketchColorPickerStore.updateIsVisible(false);\n  }\n\n  discardClick(event: MouseEvent | TouchEvent): void {\n    event.stopPropagation();\n    this.close();\n  }\n}\n","@if (isVisible$ | async) {\n  <div class=\"picker\">\n    <github-picker [control]=\"colorControl\" (colorChange)=\"changeColor()\">\n    </github-picker>\n  </div>\n}\n","import {CommonModule} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {Mode, SimpleSketchCanvasStore} from '../canvas/canvas.store';\nimport {SimpleSketchColorPickerComponent} from '../color-picker/color-picker.component';\n\n@Component({\n  selector: 'simple-sketch-toolbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatInputModule,\n    MatToolbarModule,\n    SimpleSketchColorPickerComponent,\n  ],\n  templateUrl: './toolbar.component.html',\n  styleUrl: './toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleSketchToolbarComponent {\n  private readonly simpleSketchCanvasStore: SimpleSketchCanvasStore = inject(\n    SimpleSketchCanvasStore\n  );\n  protected readonly backgroundColor$ =\n    this.simpleSketchCanvasStore.backgroundColor$;\n  protected readonly paintColor$ = this.simpleSketchCanvasStore.paintColor$;\n  protected readonly mode$ = this.simpleSketchCanvasStore.mode$;\n  readonly Mode = Mode;\n\n  changeBackgroundColor(newColor: string) {\n    this.simpleSketchCanvasStore.updateBackGroundColor(newColor);\n  }\n\n  changeMode(newMode: Mode) {\n    this.simpleSketchCanvasStore.updateMode(newMode);\n  }\n\n  changePaintColor(newColor: string) {\n    this.simpleSketchCanvasStore.updatePaintColor(newColor);\n  }\n\n  clearCanvas() {\n    this.simpleSketchCanvasStore.clearCanvas();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button aria-label=\"Background color\" class=\"z-index-elevated\">\n    <simple-sketch-color-picker\n      (colorChange)=\"changeBackgroundColor($event)\"\n      (click)=\"paintColorPicker.close()\"\n      #backgroundColorPicker>\n    </simple-sketch-color-picker>\n    <span class=\"material-symbols-outlined\">texture</span>\n    <span class=\"swatch\" [style.backgroundColor]=\"(backgroundColor$ | async)\"></span>\n  </button>\n\n  <button mat-icon-button\n      aria-label=\"Paint color\"\n      class=\"z-index-elevated\"\n      [disabled]=\"(mode$ | async) === Mode.ERASE\">\n    <simple-sketch-color-picker\n        (colorChange)=\"changePaintColor($event)\"\n        (click)=\"backgroundColorPicker.close()\"\n        #paintColorPicker>\n    </simple-sketch-color-picker>\n    <span class=\"material-symbols-outlined\">palette</span>\n    <span class=\"swatch\" [style.backgroundColor]=\"(paintColor$ | async)\"></span>\n  </button>\n\n  <button mat-icon-button aria-label=\"Clear Canvas\" (click)=\"clearCanvas()\">\n    <span class=\"material-symbols-outlined\">restart_alt</span>\n  </button>\n\n  <span class=\"flex\"></span>\n\n  <mat-button-toggle-group\n      aria-label=\"Mode\"\n      name=\"mode\"\n      [ngModel]=\"mode$ | async\"\n      (ngModelChange)=\"changeMode($event)\">\n    <mat-button-toggle [value]=\"Mode.SKETCH\" aria-label=\"Sketch\" checked>\n        <span class=\"material-symbols-outlined\">brush</span>\n    </mat-button-toggle>\n    <mat-button-toggle [value]=\"Mode.ERASE\" aria-label=\"Erase\">\n      <span class=\"material-symbols-outlined\">ink_eraser</span>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</mat-toolbar>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  inject,\n  Input,\n  ViewChild,\n} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {shareReplay} from 'rxjs/operators';\nimport {SimpleSketchToolbarComponent} from '../toolbar/toolbar.component';\nimport {SimpleSketchCanvasStore} from './canvas.store';\n\n@Component({\n  selector: 'simple-sketch-canvas',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    SimpleSketchToolbarComponent,\n  ],\n  providers: [SimpleSketchCanvasStore],\n  templateUrl: './canvas.component.html',\n  styleUrl: './canvas.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleSketchCanvasComponent implements AfterViewInit {\n  @Input({required: false}) showToolbar = true;\n  @Input({required: false}) backgroundColor = '#ffffff';\n  @Input({required: false}) paintColor = '#000000';\n\n  @ViewChild('canvas') canvas: ElementRef<HTMLCanvasElement> | null = null;\n\n  private readonly simpleSketchCanvasStore: SimpleSketchCanvasStore = inject(\n    SimpleSketchCanvasStore\n  );\n  protected readonly backgroundColor$ =\n    this.simpleSketchCanvasStore.backgroundColor$.pipe(\n      shareReplay({bufferSize: 1, refCount: true})\n    );\n  protected readonly paintColor$ =\n    this.simpleSketchCanvasStore.paintColor$.pipe(\n      shareReplay({bufferSize: 1, refCount: true})\n    );\n\n  ngAfterViewInit(): void {\n    if (this.canvas === null) return;\n    this.simpleSketchCanvasStore.init([\n      this.canvas.nativeElement,\n      this.backgroundColor,\n      this.paintColor,\n    ]);\n  }\n\n  changeBackgroundColor(event: Event) {\n    this.simpleSketchCanvasStore.updateBackGroundColor(\n      (event.target as HTMLInputElement).value\n    );\n  }\n\n  changePaintColor(event: Event) {\n    this.simpleSketchCanvasStore.updatePaintColor(\n      (event.target as HTMLInputElement).value\n    );\n  }\n\n  sketch(event: MouseEvent | TouchEvent) {\n    this.simpleSketchCanvasStore.sketch(event);\n  }\n\n  startSketch(event: MouseEvent | TouchEvent) {\n    this.simpleSketchCanvasStore.startSketch(event);\n  }\n\n  stopSketch(event: MouseEvent | TouchEvent) {\n    this.simpleSketchCanvasStore.stopSketch(event);\n  }\n}\n","<simple-sketch-toolbar *ngIf=\"showToolbar\"></simple-sketch-toolbar>\n<section class=\"canvas-wrapper\">\n  <canvas #canvas\n      (mousedown)=\"startSketch($event)\"\n      (touchstart)=\"startSketch($event)\"\n      (mouseup)=\"stopSketch($event)\"\n      (touchend)=\"stopSketch($event)\"\n      (mousemove)=\"sketch($event)\"\n      (touchmove)=\"sketch($event)\"\n  >\n  </canvas>\n</section>\n\n","/*\n * Public API Surface of simple-sketch\n */\n\nexport * from './canvas/canvas.component';\nexport * from './canvas/canvas.store';\n\nexport * from './color-picker/color-picker-mousetrap-overlay.component';\nexport * from './color-picker/color-picker.component';\nexport * from './color-picker/color-picker.store';\n\nexport * from './toolbar/toolbar.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["INITIAL_STATE","i2"],"mappings":"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"}